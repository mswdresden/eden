
output of (called in s3menu.py)
>>> print 's3menus.py, menu_modules(cls):\n\t cls=',cls,'\n\t all_modules', all_modules


all_modules OrderedDict([
('default', <Storage {'access': None, 'restricted': False, 'module_type': None, 'name_nice': <lazyT 'Home'>}>), 
('admin', <Storage {'access': '|1|', 'restricted': True, 'module_type': None, 'name_nice': <lazyT 'Administration'>}>), 
('appadmin', <Storage {'restricted': True, 'module_type': None, 'name_nice': <lazyT 'Administration'>}>), 
('errors', <Storage {'restricted': False, 'module_type': None, 'name_nice': <lazyT 'Ticket Viewer'>}>), 
('sync', <Storage {'access': '|1|', 'restricted': True, 'module_type': None, 'name_nice': <lazyT 'Synchronization'>}>), 
('tour', <Storage {'module_type': None, 'name_nice': <lazyT 'Guided Tour Functionality'>}>), 
('translate', <Storage {'module_type': None, 'name_nice': <lazyT 'Translation Functionality'>}>), 
('gis', <Storage {'restricted': True, 'module_type': 6, 'name_nice': <lazyT 'Map'>}>), 
('pr', <Storage {'access': '|1|', 'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Person Registry'>}>), 
('org', <Storage {'restricted': True, 'module_type': 1, 'name_nice': <lazyT 'Organizations'>}>), 
('hrm', <Storage {'restricted': True, 'module_type': 2, 'name_nice': <lazyT 'Staff'>}>), 
('vol', <Storage {'restricted': True, 'module_type': 2, 'name_nice': <lazyT 'Volunteers'>}>), 
('cms', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Content Management'>}>), 
('doc', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Documents'>}>), 
('msg', <Storage {'restricted': True, 'module_type': None, 'name_nice': <lazyT 'Messaging'>}>), 
('supply', <Storage {'restricted': True, 'module_type': None, 'name_nice': <lazyT 'Supply Chain Management'>}>), 
('inv', <Storage {'restricted': True, 'module_type': 4, 'name_nice': <lazyT 'Warehouses'>}>), 
('asset', <Storage {'restricted': True, 'module_type': 5, 'name_nice': <lazyT 'Assets'>}>), 
('vehicle', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Vehicles'>}>), 
('req', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Requests'>}>), 
('project', <Storage {'restricted': True, 'module_type': 2, 'name_nice': <lazyT 'Projects'>}>), 
('survey', <Storage {'restricted': True, 'module_type': 5, 'name_nice': <lazyT 'Surveys'>}>), 
('cr', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Shelters'>}>), 
('hms', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Hospitals'>}>), 
('dvr', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Disaster Victim Registry'>}>), 
('event', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Events'>}>), 
('transport', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Transport'>}>), 
('stats', <Storage {'restricted': True, 'module_type': None, 'name_nice': <lazyT 'Statistics'>}>), 
('member', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Members'>}>), 
('budget', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Budgeting Module'>}>), 
('patient', <Storage {'restricted': True, 'module_type': 10, 'name_nice': <lazyT 'Patient Tracking'>}>), 
('asylumseeker', <Storage {'module_type': 2, 'name_nice': <lazyT 'Asylumseeker'>}>), 
('residential', <Storage {'module_type': 2, 'name_nice': <lazyT 'Residential'>}>), 
('housing', <Storage {'module_type': 2, 'name_nice': <lazyT 'Housing'>}>)])

#
# @staticmethod and @classmethod
# https://rapd.wordpress.com/2008/07/02/python-staticmethod-vs-classmethod/
@staticmethod function is nothing more than a function defined inside a class. 
It is callable without instantiating the class first. It\u2019s definition is 
immutable via inheritance.

@classmethod function also callable without instantiating the class, but its 
definition follows Sub class, not Parent class, via inheritance. 
That\u2019s because the first argument for @classmethod function must 
always be cls (class).

// links
